registerPaint("triangles",class{static get inputProperties(){return["--paint-alpha","--base-hue","--size","--max-saturation","--max-lightness"]}paint(t,e,a){const l=a.get("--base-hue"),n=a.get("--max-saturation"),i=a.get("--max-lightness"),s=parseFloat(a.get("--size")),h=a.get("--paint-alpha");let o,r;t.globalAlpha=h,t.scale(1,1),t.lineJoin="bevel";let g=!1;const p=[];for(let a=-s;a<=e.height+1.4*s;a+=s){g=!g,o=[];for(let l=-s;l<=e.width+1.4*s;l+=s)r={x:l+(g?s/2:0),y:a},o.push({x:l+(.8*Math.random()-.4)*s+(g?s/2:0),y:a+(.8*Math.random()-.4)*s}),t.beginPath(),t.arc(r.x,r.y,1,0,2*Math.PI,!0);p.push(o)}let x;g=!0;for(let e=0;e<p.length-1;e++){g=!g,x=[];for(let t=0;t<p[e].length;t++)x.push(g?p[e][t]:p[e+1][t]),x.push(g?p[e+1][t]:p[e][t]);for(let e=0;e<x.length-2;e++)this.drawTriangle(t,x[e],x[e+1],x[e+2],l,n,i)}}drawTriangle(t,e,a,l,n,i,s){t.beginPath(),t.moveTo(e.x,e.y),t.lineTo(a.x,a.y),t.lineTo(l.x,l.y),t.lineTo(e.x,e.y),t.closePath();const h=Math.random()*i,o=Math.random()*s;t.fillStyle=`hsl(${n}, ${h}%, ${o}%)`,t.fill(),t.stroke()}});
//# sourceMappingURL=triangles.js.map
