---
import Layout from '$layouts/Donut.astro';
import { client } from '$lib/sanity';
import Heading from '$components/Heading.astro';

export interface Props {
  title: string;
  query: string;
  hue: number;
  saturation: number;
  lightness: number;
  alpha: number;
  size: number;
  background: string;
  Card: any;
  structure: Function;
}

const {
  title,
  query,
  hue,
  saturation,
  lightness,
  alpha,
  size,
  background,
  Card,
  structure,
} = Astro.props as Props;

// Pass in option for component to use in listing

const posts = Object.entries(
  (await client.fetch(query))
    .map(structure)
    .sort((a, b) => b.updated - a.updated)
    .reduce((acc, cur) => {
      // Pass in option to not do year?
      const year = cur.updated.getFullYear();
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(cur);
      return acc;
    }, {}),
)
  .map(([year, posts]) => {
    return {
      year: Number(year),
      posts,
    };
  })
  .sort((a, b) => b.year - a.year);
---

<Layout title="Musings" summary="All blog posts">
  <main class="container">
    <header class="container--heading">
      <Heading
        title={title}
        hue={hue}
        saturation={saturation}
        lightness={lightness}
        size={size}
        alpha={alpha}
      />
    </header>

    <div class="all-posts">
      {
        posts.map((p) => (
          <section class="post-section">
            <h2 class="type--h2">{p.year}</h2>
            <ul class="posts">
              {p.posts.map((post) => (
                <li>
                  <Card content={post} />
                </li>
              ))}
            </ul>
          </section>
        ))
      }
      <slot />
    </div>
  </main>
</Layout>

<style lang="scss" define:vars={{ background }}>
  .container {
    --highlight-color: var(--background);
  }

  .container--heading {
    background: var(--background);
    height: 33vh;
  }

  :global(.post-section),
  .all-posts {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 1rem 2rem;
  }

  .all-posts {
    margin: 0 auto;
    max-width: 125ch;
  }

  .posts {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fill, minmax(25ch, 1fr));
    padding: 1rem 2rem;

    li {
      height: 100%;
    }
  }
</style>
