---
import Layout from '$layouts/Donut.astro';
import Heading from '$components/Heading.astro';
import { client } from '$lib/sanity';
import md from 'chromeos-dev-markdown';

/**
 * Builds statuc path data for the pages
 * @return {Object} The static path data
 */
export async function getStaticPaths() {
  const query = '*[_type == "post" &&  !(_id in path("drafts.**"))]';

  const posts = await client.fetch(query);

  return posts.map((post) => {
    return {
      params: {
        slug: post.slug.current,
      },
      props: {
        title: post.title,
        summary: post.summary,
        body: post.body,
        published: post.published,
        updated: post.updated,
      },
    };
  });
}

const { title, summary, body, published, updated } = Astro.props;

const date = new Date(published);
const up = new Date(updated);

const dateDiff = updated ? date.getTime() !== up.getTime() : false;
---

<Layout title={title} summary={summary}>
  <main itemscope="" itemtype="http://schema.org/Blog">
    <article class="article">
      <header class="article--heading">
        <Heading
          {title}
          hue={25}
          saturation={30}
          lightness={80}
          size={125}
          alpha={0.2}
        />
      </header>
      <div class="article--container">
        <div class="article--inner">
          <p class="article--date">
            {
              dateDiff ? (
                <span>
                  <span
                    class="article--date-signifier"
                    aria-label="Updated on:"
                  >
                    U{' '}
                  </span>
                  <span>
                    {up.toLocaleDateString([], {
                      year: 'numeric',
                      month: 'numeric',
                      day: 'numeric',
                    })}
                  </span>
                  <span> / </span>
                  <span
                    class="article--date-signifier"
                    aria-label="Published on:"
                  >
                    P{' '}
                  </span>
                </span>
              ) : (
                ''
              )
            }
            <time datetime={date.toISOString()}
              >{
                date.toLocaleDateString([], {
                  year: 'numeric',
                  month: 'numeric',
                  day: 'numeric',
                })
              }
            </time>
          </p>
          <div class="article--content type" set:html={md.render(body)} />
        </div>
      </div>
    </article>
  </main>
</Layout>

<style lang="scss">
  @import 'letterform-shades/stylesheets/letterform-shades';

  .article {
    &--heading {
      background-image: linear-gradient(
        to bottom right,
        var(--red),
        var(--gold)
      );
      height: 100vh;
      left: 0;
      position: fixed;
      top: 0;
      width: 100vw;
      z-index: 0;
    }

    &--date {
      background-color: var(--black);
      border-radius: 0 0 0 5px;
      color: transparent;
      float: right;
      font-size: 1rem;
      line-height: 1;
      padding-bottom: 1rem;
      padding-left: 1rem;
      padding-top: 0.4rem;
      position: relative;
      -webkit-text-stroke: 1px var(--snow);
      writing-mode: vertical-lr;
      z-index: 2;
    }

    &--date-signifier {
      -webkit-text-stroke: 1px var(--light-red);
    }

    &--container {
      background-color: var(--black);
      box-shadow: 0 -1rem 3rem rgba(0, 0, 0, 0.5);
      color: var(--white);
      margin-top: 100vh;
      padding: var(--spacing);
      position: relative;
      z-index: 1;
    }

    &--inner {
      margin: 0 auto;
      max-width: 60ch;
      position: relative;
    }

    &--content {
      > :global(p:first-of-type::first-letter) {
        @include close-shade(var(--red), var(--gold), 'bottom right', 15);
        color: var(--snow);
        float: left;
        font-size: 4em;
        line-height: 1;
        margin-top: 5px;
        padding-bottom: 0.5rem;
        padding-right: 0.5rem;
      }
    }
  }
</style>
